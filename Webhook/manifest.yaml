---
kind: Service
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    name: webhook
    port: 443
    targetPort: 8888
  selector:
    app: webhook
apiVersion: v1
metadata:
  name: webhook
  namespace: ${NAMESPACE}
  labels:
    app: webhook
---
kind: Deployment
spec:
  template:
    spec:
      volumes:
      containers:
        name: webhook
        image: webhook:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 8888
        readinessProbe:
          httpGet:
            path: /api/health
            scheme: HTTPS
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 60
        livenessProbe:
          httpGet:
            path: /api/health
            scheme: HTTPS
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 60
        resources:
          requests:
            cpu: 300m
            memory: 50Mi
          limits:
            cpu: 300m
            memory: 50Mi
        volumeMounts:
        - name: certs
          mountPath: /etc/webhook/certs
          readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: certs
    metadata:
      labels:
        app: webhook
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
apiVersion: apps/v1beta1
metadata:
  name: webhook
  namespace: ${NAMESPACE}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: webhook
  labels:
    app: webhook
webhooks:
  - name: docker.registry.validation
    clientConfig:
      service:
        name: webhook
        namespace: ${NAMESPACE}
        path : "/"
      caBundle: ${CA_BUNDLE}
    rules:
      - operations: ["CREATE"]
        apiGroups: ["", "extensions", "apps"]
        apiVersions: ["v1"]
        resources: ["serviceaccounts"]
    failurePolicy: Fail
