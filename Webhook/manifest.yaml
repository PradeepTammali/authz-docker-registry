---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: docker-registry-serviceaccount-validation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: docker-registry-serviceaccount-validation
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: docker-registry-serviceaccount-validation
rules:
- apiGroups:
  - "*"
  resources:
  - serviceaccounts
  verbs:
  - get
  - patch
- apiGroups:
  - "*"
  resources:
  - secrets
  verbs:
  - get
  - create
---
kind: Service
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    name: SERVICE_NAME
    port: 443
    targetPort: 8888
  selector:
    app: SERVICE_NAME
apiVersion: v1
metadata:
  name: SERVICE_NAME
  namespace: ${NAMESPACE}
  labels:
    app: SERVICE_NAME
---
kind: Deployment
spec:
  selector:
    matchLabels:
      app: SERVICE_NAME
  template:
    spec:
      containers:
      - name: SERVICE_NAME
        image: pradeeptammali/docker-registry-serviceaccount-validation:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: SOURCE_SECRET_NAME
          value: regcred
        - name: SOURCE_SECRET_NAMESPACE
          value: sample
        - name: TARGET_SERVICE_ACCOUNT
          value: default
        ports:
        - containerPort: 8888
        readinessProbe:
          httpGet:
            path: /api/health
            scheme: HTTPS
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 60
        livenessProbe:
          httpGet:
            path: /api/health
            scheme: HTTPS
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 60
        resources:
          requests:
            cpu: 300m
            memory: 50Mi
          limits:
            cpu: 300m
            memory: 50Mi
        volumeMounts:
        - name: SERVER_CERT
          mountPath: /etc/webhook/certs/cert.pem
          subPath: cert.pem
          readOnly: true
        - name: SERVER_KEY
          mountPath: /etc/webhook/certs/key.pem
          subPath: key.pem
          readOnly: true
      volumes:
        - name: SERVER_CERT
          secret:
            secretName: SERVER_CERT
            defaultMode: 0400
        - name: SERVER_KEY
          secret:
            secretName: SERVER_KEY
            defaultMode: 0400
    metadata:
      labels:
        app: SERVICE_NAME
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
apiVersion: apps/v1
metadata:
  name: SERVICE_NAME
  namespace: ${NAMESPACE}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: SERVICE_NAME
  labels:
    app: SERVICE_NAME
webhooks:
  - name: docker.registry.serviceaccount.validation
    clientConfig:
      service:
        name: SERVICE_NAME
        namespace: ${NAMESPACE}
        path : "/"
      caBundle: ${CA_BUNDLE}
    rules:
      - operations: ["CREATE"]
        apiGroups: ["", "extensions", "apps"]
        apiVersions: ["v1"]
        resources: ["serviceaccounts"]
    failurePolicy: Fail
